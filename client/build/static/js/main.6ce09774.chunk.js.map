{"version":3,"sources":["components/Search/Search.js","components/Detail/Detail.js","components/Similar/Similar.js","components/App.js","actions/AppAction.js","containers/App.js","reducers/AppReducer.js","reducers/Reducer.js","index.js"],"names":["Search","react_default","a","createElement","className","Component","Detail","Similar","App","lib","title","components_Search_Search","components_Detail_Detail","components_Similar_Similar","changeValue","value","type","connect","_ref","inputValue","appReducer","dispatch","initState","reducers","combineReducers","state","arguments","length","undefined","action","Object","objectSpread","store","createStore","applyMiddleware","logger","render","es","containers_App","document","getElementById"],"mappings":"mMAYeA,mLARP,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,iEAHSC,aCUNC,mLARP,OACIL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,yIAHSC,aCUNE,mLARP,OACIN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAf,mLAHUC,qBC6BPG,mLAlBP,OACIP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAACM,EAAA,OAAD,KACIR,EAAAC,EAAAC,cAACM,EAAA,OAAD,CAAQC,MAAM,mCAEdT,EAAAC,EAAAC,cAACM,EAAA,QAAD,CAASL,UAAU,mBACfH,EAAAC,EAAAC,cAACQ,EAAD,MACAV,EAAAC,EAAAC,cAACS,EAAD,MACAX,EAAAC,EAAAC,cAACU,EAAD,iBAhBVR,aCLLS,EAAc,SAACC,GAAD,MAAY,CACnCC,KAAM,eACND,UCkBWE,kBAff,SAAAC,GACI,MAAO,CACHC,WAF+BD,EAAbE,WAEKD,aAK/B,SAA4BE,GACxB,MAAO,CACHP,YADG,SACSC,GACRM,EAASP,EAAYC,OAKlBE,CAA6CT,0BCpBtDc,EAAY,CACdH,WAAY,ICGhB,IAIeI,EAJEC,YAAgB,CAC7BJ,WDAW,WAA+C,IAA3BK,EAA2BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAnBJ,EAAWO,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC1D,OAAQC,EAAOb,MACX,IAAK,eACD,OAAOc,OAAAC,EAAA,EAAAD,CAAA,GACAL,EADP,CAEIN,WAAYU,EAAOd,QAE3B,QACI,OAAOU,uBEHbO,eAAQC,YACVV,EACAW,YAAgBC,OAGpBC,iBACInC,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAUL,MAAOA,GACb/B,EAAAC,EAAAC,cAACmC,EAAD,OAEJC,SAASC,eAAe","file":"static/js/main.6ce09774.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass Search extends Component {\n    render() {\n        return (\n            <div className=\"Search\">\n                ここは検索する部分\n            </div>\n        );\n    }\n}\n\nexport default Search;\n","import React, {Component} from 'react';\n\nclass Detail extends Component {\n    render() {\n        return (\n            <div className=\"Detail\">\n                ここはSearchでクリックものの詳細を表示する部分\n            </div>\n        );\n    }\n}\n\nexport default Detail;\n","import React, {Component} from 'react';\n\nclass Similar extends Component {\n    render() {\n        return (\n            <div className=\"Similar\">\n                ここはDetailに表示している物に類似しているものを表示する部分\n            </div>\n        );\n    }\n}\n\nexport default Similar;\n","import React, {Component} from 'react';\nimport Search from \"./Search/Search\";\nimport Detail from \"./Detail/Detail\";\nimport Similar from \"./Similar/Similar\";\nimport { Layout, Header, Content } from 'react-mdl';\n\nclass App extends Component {\n    //thisを関数内でも使えるように定義\n    // constructor(props) {\n    //     super(props);\n    // }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <div className=\"demo-big-content\">\n                    <Layout>\n                        <Header title=\"アニメ推薦\">\n                        </Header>\n                        <Content className=\"content-wrapper\">\n                            <Search/>\n                            <Detail/>\n                            <Similar/>\n                        </Content>\n                    </Layout>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","//Actionの定義\nexport const changeValue = (value) => ({\n    type: 'CHANGE_VALUE',\n    value,\n});\n","import {connect} from 'react-redux'\nimport App from '../components/App'\nimport {changeValue} from '../actions/AppAction'\n\n//stateにある値をthis.propsで受け取れるように受け取りたい値をここで宣言\n//受け取るReducerの指定→Reducer内に存在する値を指定し，取得\nfunction mapStateToProps({appReducer}) {\n    return {\n        inputValue: appReducer.inputValue,\n    };\n}\n\n//Actionで定義したものをthis.propsで受け取れるように受け取りたいActionをここで宣言\nfunction mapDispatchToProps(dispatch) {\n    return {\n        changeValue(value) {\n            dispatch(changeValue(value))\n        }\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","//stateの初期化\nconst initState = {\n    inputValue: ''\n};\n\n//呼ばれたActionによって行う処理の分岐\nexport default function appReducer(state = initState, action) {\n    switch (action.type) {\n        case 'CHANGE_VALUE':\n            return { //この書き方でstateを引用しつつ，一致した箇所は書き換えるという記述\n                ...state,\n                inputValue: action.value\n            };\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from 'redux'\nimport appReducer from './AppReducer'\n\n//combineReducersで複数のReducerをまとめることが出来る\n//このまま下にReducer追記でおk\nconst reducers = combineReducers({\n    appReducer,\n});\n\nexport default reducers\n","import React from 'react';\nimport App from './containers/App';\nimport {render} from 'react-dom';\nimport {createStore, applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux';\nimport reducers from './reducers/Reducer';\nimport logger from 'redux-logger';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\n\n//reducerとミドルウェアをつなげる\nconst store = createStore(\n    reducers,\n    applyMiddleware(logger)\n);\n\nrender(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}